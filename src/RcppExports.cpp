// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// msboot
Rcpp::List msboot(int nrep, arma::mat x, int Wsel, bool stdz, int ncore);
RcppExport SEXP _EFBA_msboot(SEXP nrepSEXP, SEXP xSEXP, SEXP WselSEXP, SEXP stdzSEXP, SEXP ncoreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nrep(nrepSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type Wsel(WselSEXP);
    Rcpp::traits::input_parameter< bool >::type stdz(stdzSEXP);
    Rcpp::traits::input_parameter< int >::type ncore(ncoreSEXP);
    rcpp_result_gen = Rcpp::wrap(msboot(nrep, x, Wsel, stdz, ncore));
    return rcpp_result_gen;
END_RCPP
}
// tsbootH0
arma::mat tsbootH0(arma::mat x, arma::mat rndraws, int ncore);
RcppExport SEXP _EFBA_tsbootH0(SEXP xSEXP, SEXP rndrawsSEXP, SEXP ncoreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rndraws(rndrawsSEXP);
    Rcpp::traits::input_parameter< int >::type ncore(ncoreSEXP);
    rcpp_result_gen = Rcpp::wrap(tsbootH0(x, rndraws, ncore));
    return rcpp_result_gen;
END_RCPP
}
// fhat_lp
arma::cx_cube fhat_lp(arma::mat X, int N, bool stdz);
RcppExport SEXP _EFBA_fhat_lp(SEXP XSEXP, SEXP NSEXP, SEXP stdzSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< bool >::type stdz(stdzSEXP);
    rcpp_result_gen = Rcpp::wrap(fhat_lp(X, N, stdz));
    return rcpp_result_gen;
END_RCPP
}
// fhat_pmt
arma::cx_cube fhat_pmt(arma::mat X, int N, int K, int Rsel, bool stdz);
RcppExport SEXP _EFBA_fhat_pmt(SEXP XSEXP, SEXP NSEXP, SEXP KSEXP, SEXP RselSEXP, SEXP stdzSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type Rsel(RselSEXP);
    Rcpp::traits::input_parameter< bool >::type stdz(stdzSEXP);
    rcpp_result_gen = Rcpp::wrap(fhat_pmt(X, N, K, Rsel, stdz));
    return rcpp_result_gen;
END_RCPP
}
// ghat
arma::cx_cube ghat(arma::cx_cube fhat_pmt);
RcppExport SEXP _EFBA_ghat(SEXP fhat_pmtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_cube >::type fhat_pmt(fhat_pmtSEXP);
    rcpp_result_gen = Rcpp::wrap(ghat(fhat_pmt));
    return rcpp_result_gen;
END_RCPP
}
// Qpval
arma::vec Qpval(arma::cx_cube fhat_pmt, int K, int ndraw, arma::vec Qts, double Qint, bool blockdiag);
RcppExport SEXP _EFBA_Qpval(SEXP fhat_pmtSEXP, SEXP KSEXP, SEXP ndrawSEXP, SEXP QtsSEXP, SEXP QintSEXP, SEXP blockdiagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_cube >::type fhat_pmt(fhat_pmtSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type ndraw(ndrawSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Qts(QtsSEXP);
    Rcpp::traits::input_parameter< double >::type Qint(QintSEXP);
    Rcpp::traits::input_parameter< bool >::type blockdiag(blockdiagSEXP);
    rcpp_result_gen = Rcpp::wrap(Qpval(fhat_pmt, K, ndraw, Qts, Qint, blockdiag));
    return rcpp_result_gen;
END_RCPP
}
// fEBA
Rcpp::List fEBA(arma::cx_cube fhat_pmt, arma::cx_cube ghat, int K, int ndraw, double alpha, bool blockdiag);
RcppExport SEXP _EFBA_fEBA(SEXP fhat_pmtSEXP, SEXP ghatSEXP, SEXP KSEXP, SEXP ndrawSEXP, SEXP alphaSEXP, SEXP blockdiagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cx_cube >::type fhat_pmt(fhat_pmtSEXP);
    Rcpp::traits::input_parameter< arma::cx_cube >::type ghat(ghatSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type ndraw(ndrawSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< bool >::type blockdiag(blockdiagSEXP);
    rcpp_result_gen = Rcpp::wrap(fEBA(fhat_pmt, ghat, K, ndraw, alpha, blockdiag));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello
List rcpp_hello();
RcppExport SEXP _EFBA_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EFBA_msboot", (DL_FUNC) &_EFBA_msboot, 5},
    {"_EFBA_tsbootH0", (DL_FUNC) &_EFBA_tsbootH0, 3},
    {"_EFBA_fhat_lp", (DL_FUNC) &_EFBA_fhat_lp, 3},
    {"_EFBA_fhat_pmt", (DL_FUNC) &_EFBA_fhat_pmt, 5},
    {"_EFBA_ghat", (DL_FUNC) &_EFBA_ghat, 1},
    {"_EFBA_Qpval", (DL_FUNC) &_EFBA_Qpval, 6},
    {"_EFBA_fEBA", (DL_FUNC) &_EFBA_fEBA, 6},
    {"_EFBA_rcpp_hello", (DL_FUNC) &_EFBA_rcpp_hello, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_EFBA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
